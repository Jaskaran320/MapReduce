# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import kmeans_pb2 as kmeans__pb2


class MasterStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """


class MasterServicer(object):
    """Missing associated documentation comment in .proto file."""


def add_MasterServicer_to_server(servicer, server):
    rpc_method_handlers = {
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kmeans.Master', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Master(object):
    """Missing associated documentation comment in .proto file."""


class MapperStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Mapper = channel.unary_unary(
                '/kmeans.Mapper/Mapper',
                request_serializer=kmeans__pb2.MapperArgs.SerializeToString,
                response_deserializer=kmeans__pb2.MapperReply.FromString,
                )
        self.PartitionReq = channel.unary_unary(
                '/kmeans.Mapper/PartitionReq',
                request_serializer=kmeans__pb2.PartitionReqArgs.SerializeToString,
                response_deserializer=kmeans__pb2.PartitionReqReply.FromString,
                )
        self.HeartBeat = channel.unary_unary(
                '/kmeans.Mapper/HeartBeat',
                request_serializer=kmeans__pb2.HeartBeatArgs.SerializeToString,
                response_deserializer=kmeans__pb2.HeartBeatReply.FromString,
                )


class MapperServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Mapper(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PartitionReq(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HeartBeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MapperServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Mapper': grpc.unary_unary_rpc_method_handler(
                    servicer.Mapper,
                    request_deserializer=kmeans__pb2.MapperArgs.FromString,
                    response_serializer=kmeans__pb2.MapperReply.SerializeToString,
            ),
            'PartitionReq': grpc.unary_unary_rpc_method_handler(
                    servicer.PartitionReq,
                    request_deserializer=kmeans__pb2.PartitionReqArgs.FromString,
                    response_serializer=kmeans__pb2.PartitionReqReply.SerializeToString,
            ),
            'HeartBeat': grpc.unary_unary_rpc_method_handler(
                    servicer.HeartBeat,
                    request_deserializer=kmeans__pb2.HeartBeatArgs.FromString,
                    response_serializer=kmeans__pb2.HeartBeatReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kmeans.Mapper', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Mapper(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Mapper(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kmeans.Mapper/Mapper',
            kmeans__pb2.MapperArgs.SerializeToString,
            kmeans__pb2.MapperReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PartitionReq(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kmeans.Mapper/PartitionReq',
            kmeans__pb2.PartitionReqArgs.SerializeToString,
            kmeans__pb2.PartitionReqReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HeartBeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kmeans.Mapper/HeartBeat',
            kmeans__pb2.HeartBeatArgs.SerializeToString,
            kmeans__pb2.HeartBeatReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ReducerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Reducer = channel.unary_unary(
                '/kmeans.Reducer/Reducer',
                request_serializer=kmeans__pb2.ReducerArgs.SerializeToString,
                response_deserializer=kmeans__pb2.ReducerReply.FromString,
                )
        self.HeartBeat = channel.unary_unary(
                '/kmeans.Reducer/HeartBeat',
                request_serializer=kmeans__pb2.HeartBeatArgs.SerializeToString,
                response_deserializer=kmeans__pb2.HeartBeatReply.FromString,
                )


class ReducerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Reducer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HeartBeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ReducerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Reducer': grpc.unary_unary_rpc_method_handler(
                    servicer.Reducer,
                    request_deserializer=kmeans__pb2.ReducerArgs.FromString,
                    response_serializer=kmeans__pb2.ReducerReply.SerializeToString,
            ),
            'HeartBeat': grpc.unary_unary_rpc_method_handler(
                    servicer.HeartBeat,
                    request_deserializer=kmeans__pb2.HeartBeatArgs.FromString,
                    response_serializer=kmeans__pb2.HeartBeatReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kmeans.Reducer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Reducer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Reducer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kmeans.Reducer/Reducer',
            kmeans__pb2.ReducerArgs.SerializeToString,
            kmeans__pb2.ReducerReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HeartBeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kmeans.Reducer/HeartBeat',
            kmeans__pb2.HeartBeatArgs.SerializeToString,
            kmeans__pb2.HeartBeatReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
